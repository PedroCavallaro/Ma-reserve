// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id           String        @id @default(uuid())
  name         String
  pictures     String[]
  max_guests   Int
  highlights   String[]
  latitude     String
  longitude    String
  opening_time Int
  closing_time Int
  about        String?
  Reservation  Reservation[]
  Menu         Menu[]
  Comments     Comments[]
  City         City?         @relation(fields: [cityId], references: [id])
  cityId       String?
  Gastronomy   Gastronomy?   @relation(fields: [gastronomyId], references: [id])
  gastronomyId String?
}

model FoodType {
  id          String @id @default(uuid())
  description String
  Menu        Menu[]
}

model Gastronomy {
  id          String       @id @default(uuid())
  description String
  Restaurant  Restaurant[]
}

model Menu {
  id           String     @id @default(uuid())
  description  String
  pictures     String[]
  price        Float
  Restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  FoodType     FoodType?  @relation(fields: [foodTypeId], references: [id])
  foodTypeId   String?
}

model Reservation {
  id           String     @id @default(uuid())
  guests       Int
  isApproved   Boolean    @default(false)
  day          DateTime
  time         Int
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  User         User       @relation(fields: [userId], references: [id])
  userId       String
}

model Comments {
  id           String     @id @default(uuid())
  comment      String
  date         DateTime
  User         User       @relation(fields: [userId], references: [id])
  userId       String
  Restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
}

model User {
  id          String        @id @default(cuid())
  name        String?
  password    String?
  email       String        @unique
  image       String?
  Reservation Reservation[]
  Comments    Comments[]
}

model City {
  id         String       @id @default(cuid())
  name       String
  State      State?       @relation(fields: [stateId], references: [id])
  stateId    String?
  Restaurant Restaurant[]
}

model State {
  id           String @id @default(cuid())
  name         String
  abbreviation String
  City         City[]
}
